// Code generated by mockery v2.47.0. DO NOT EDIT.

package mocks

import (
	entities "energia/entities"

	mock "github.com/stretchr/testify/mock"
)

// EmailServiceInterface is an autogenerated mock type for the EmailServiceInterface type
type EmailServiceInterface struct {
	mock.Mock
}

// GenerateDeviceUsageReport provides a mock function with given fields: userID
func (_m *EmailServiceInterface) GenerateDeviceUsageReport(userID int) (string, error) {
	ret := _m.Called(userID)

	if len(ret) == 0 {
		panic("no return value specified for GenerateDeviceUsageReport")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(int) (string, error)); ok {
		return rf(userID)
	}
	if rf, ok := ret.Get(0).(func(int) string); ok {
		r0 = rf(userID)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendEmail provides a mock function with given fields: _a0
func (_m *EmailServiceInterface) SendEmail(_a0 entities.Email) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for SendEmail")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(entities.Email) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewEmailServiceInterface creates a new instance of EmailServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEmailServiceInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *EmailServiceInterface {
	mock := &EmailServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
